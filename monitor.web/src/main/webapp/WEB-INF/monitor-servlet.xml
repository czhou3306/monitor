<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/mvc
    		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.2.xsd" default-autowire="byName">

 	<bean class="com.qiangungun.monitor.common.help.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
		<property name="ignoreResourceNotFound" value="true"/>
		<property name="locations">
			<list>
				<value>file:~/config/monitor/common.properties</value>
			</list>
		</property>
	</bean>


	<!-- <aop:aspectj-autoproxy proxy-target-class="true"/> -->

	<!-- <bean id="logAdvice" class="com.qiangungun.prague.web.controller.LogAdvice">
	</bean>  -->

	<!-- <bean id="authInterceptor" class="com.qiangungun.mobile.config.AuthInterceptor">
    </bean>
    
 -->
	<context:annotation-config/>

	<!-- 对静态资源文件的访问 -->
	<mvc:resources mapping="/monitor/**" location="/monitor/" />
	<!--<mvc:resources mapping="/open5/**" location="file:/home/admin/open5/" />
	 <mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/fonts/**" location="/fonts/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/lib/**" location="/lib/" />
	<mvc:resources mapping="*.js" location="/" /> -->
	

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- <log:annotation-driven/>

	<log:log-interceptor id="logInterceptor"/>

	 <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.qiangungun.mobile.filter.CorsInterceptor"/>
		</mvc:interceptor>
		<ref bean="logInterceptor"/>
	</mvc:interceptors>  -->



	<!-- ①：对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.qiangungun.monitor" /> 

	<!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="useDefaultSuffixPattern" value="false"/>
	</bean>

	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>


	<!-- <bean class="com.qiangungun.doc.SwaggerConfig"/> -->


	<!-- <bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.velocity.VelocityLayoutView" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="suffix" value=".vm" />
		<property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" />
		<property name="layoutUrl" value="layout/layout.vm" />
		<property name="layoutKey" value="layout" />
		<property name="screenContentKey" value="screen_content" />
		<property name="exposeSpringMacroHelpers" value="true" />是否使用spring对宏定义的支持
        <property name="exposeRequestAttributes" value="true" />是否开放request属性
        <property name="exposeSessionAttributes" value="true"/> 
        <property name="requestContextAttribute" value="rc"/>request属性引用名称
	</bean>

	<bean id="velocityConfigurer"
				 class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath">页面文件的路径,相对于webapp
			<value>velocity</value>
		</property>
		<property name="configLocation" value="/WEB-INF/velocity.properties" />
		<property name="velocityProperties">
			<props>
				<prop key="velocimacro.library">macros-default.vm</prop>Velocimacro 模板库的列表
				<prop key="eventhandler.noescape.html.match">/(?:screen_content)|(?:noescape_.*)/</prop>
			</props>
		</property>
	</bean> -->

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		p:basenames="velocity/message/errors"
		p:defaultEncoding="UTF-8"
		p:cacheSeconds="60"/>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="utf-8"></property>   
        <property name="maxUploadSize" value="10485760000"></property>  
        <property name="maxInMemorySize" value="40960"></property>  
   </bean>  
    
</beans>