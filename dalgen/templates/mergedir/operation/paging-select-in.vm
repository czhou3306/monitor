## check parameters#if (${operation.paramType} == "object")    	if (${operation.params.get(0).name} == null) {    		throw new IllegalArgumentException("Can't select by a null data object.");    	}#end## prepare parameters#if (${operation.params.size()} == 0)#set ($paramName = "null")#elseif (${operation.params.size()} == 1)#if (${operation.param.javaTypePrimitive})        ${operation.param.simpleJavaTypeForPrimitive} param = new ${operation.param.simpleJavaTypeForPrimitive}(${operation.param.name});#set ($paramName = "param")#else#set ($paramName = ${operation.param.name})#end#else        Map<String,Object> param = new HashMap<String,Object>();#foreach ($param in ${operation.params})#if ($param.javaTypeForPrimitive)        param.put("${param.name}", new ${param.simpleJavaTypeForPrimitive}(${param.name}));#else        param.put("${param.name}", ${param.name});#end#end#set ($paramName = "param")#end        //��ҳ����        Paginator paginator = new Paginator();        paginator.setItemsPerPage(pageSize);        paginator.setPage(pageNum);        paginator.setItems(((Integer) getSqlMapClientTemplate().queryForObject("${operation.mappedStatementIdForCount}", ${paramName})).intValue());                PageList  pageList = new PageList();        pageList.setPaginator(paginator);		if (paginator.getBeginIndex() <= paginator.getItems()) {            ${paramName}.put("${operation.startRowName}", new Integer(paginator.getBeginIndex()));            ${paramName}.put("${operation.endRowName}", new Integer(paginator.getEndIndex()));		}		//�жϿ����Ƿ�  	  if (this.getPower() == false) {  		  //ֱ�Ӵ�ԭ�ֶ�ȡֵ            pageList.addAll(getSqlMapClientTemplate().queryForList("${operation.mappedStatementId}", ${paramName}));              return pageList;  	  }	  	  //�����ؿ���ʱ�򣬴����ֶ�ȡ��ֵ		${table.getQualifiedDOClassName()} opDO = new ${table.getQualifiedDOClassName()}();				List<${table.getQualifiedDOClassName()}> tempValue = getSqlMapClientTemplate().queryForList("${operation.mappedStatementId}", ${paramName});					if (CollectionUtils.isEmpty(tempValue)){		    pageList.add(tempValue);		    return pageList;		}#if(${table.getTableConfig().bIntegrity()} == true)		    //������У�鲿��	    methodUtils.checkIntegForPaging(tempValue,opDO);#end         ##�����ǻ����ԵĲ���#if(${table.getTableConfig().bConfidentiality()} == true)//���÷�ҳ����ʱ�Ļ����Խ��ܷ���          PageList pagelist = methodUtils.getConfResultForPaging(pageList, tempValue,opDO);#end        return pageList;